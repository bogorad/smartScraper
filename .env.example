# --- LLM Configuration ---
# Your OpenRouter API Key
OPENROUTER_API_KEY=your_openrouter_api_key_here
# The LLM model identifier to use (recommend a model with large context window)
LLM_MODEL=meta-llama/llama-4-maverick:free
# The temperature setting for the LLM (0 for deterministic output)
LLM_TEMPERATURE=0

# --- Puppeteer Configuration ---
# Path to your Chrome/Chromium executable (optional)
PUPPETEER_EXECUTABLE_PATH=/usr/lib/chromium/chromium
# Whether to run Puppeteer in headless mode (true, false, or 'new') - also configurable in scraper-settings.js
# PUPPETEER_HEADLESS=true
# Timeout for Puppeteer operations in milliseconds - also configurable in scraper-settings.js
# PUPPETEER_TIMEOUT=30000
# Extension paths (comma-separated) - also configurable in scraper-settings.js
# EXTENSION_PATHS="/path/to/extension1,/path/to/extension2"
# HTTP proxy for web scraping (format: http://username:password@hostname:port)
HTTP_PROXY=http://xxx.xxx.xxx.xxx:8888

# --- CAPTCHA Solver Configuration ---
# Your 2Captcha API key
TWOCAPTCHA_API_KEY=your_2captcha_api_key_here
# CAPTCHA Service name (e.g., 2captcha, anticaptcha) - also configurable in captcha-solver-config.js
# CAPTCHA_SERVICE_NAME=2captcha
# List of domains that need DataDome CAPTCHA handling (comma-separated)
# DATADOME_DOMAINS=wsj.com,nytimes.com

# --- Logging Configuration ---
# Set to DEBUG, INFO, WARN, ERROR, or NONE.
# Setting LOG_LEVEL=DEBUG enables full debug mode features, including verbose logs and HTML dumps.
LOG_LEVEL=INFO

# --- HTML Saving (Activated if LOG_LEVEL=DEBUG and this is true) ---
# SAVE_HTML_ON_SUCCESS_NAV=false # Default is false, can be overridden here or in scraper-settings.js

# --- DOM Structure Extraction (Can be set here to override defaults in scraper-settings.js) ---
# DOM_STRUCTURE_MAX_TEXT_LENGTH=15
# DOM_STRUCTURE_MIN_TEXT_SIZE_TO_ANNOTATE=100

# --- Optional: For development, to see more detailed Node.js errors ---
# NODE_ENV=development
